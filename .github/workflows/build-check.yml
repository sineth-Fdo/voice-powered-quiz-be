name: NestJS Build Check

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm@9.15.4

      - name: Install dependencies 📦 
        run: pnpm install

      - name: Build the NestJS project 🛠️
        run: pnpm build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/voice-powered-quiz-be:${{ github.sha }} .

      - name: Tag Docker image
        run: docker tag ${{ secrets.DOCKER_USERNAME }}/voice-powered-quiz-be:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/voice-powered-quiz-be:latest

      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/voice-powered-quiz-be:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/voice-powered-quiz-be:latest

      - name: Update v1.0 tag
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/voice-powered-quiz-be:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/voice-powered-quiz-be:v1.0
          docker push ${{ secrets.DOCKER_USERNAME }}/voice-powered-quiz-be:v1.0

  deploy:
    needs: build
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to EC2
        env:
          SSH_KEY: MIIEpAIBAAKCAQEAyJk8iIyYFMycvXXciRBlAbnKZgqXrcr4TLE5DX6PufCehVbC
sJCLNM18DB434/e3GJPXwDU+yFQHOnukPNQrYlDHmpOjMU8ttqLccKv2/sC/th7s
aSe9QvBuv9M8OxKSrrqOtIxOPah9tB/688qgYD7bVyw8mVsiRIa70yR+oDawRmQJ
qp4dp/y9820kBNQW1aFkbjN+wyVqOkAVv6GhWQbffG2Ij+Ix2d66/4YPNbq4C+c8
8TOL6IfCDqajCLAIF1DjbFrjKHgDx1nNexjWOK472PCdaF7MpidpCPNZg1QdUkKR
TFbYhTqSiwt5BbE5nBOwRLybIu0FdunTJQGRpQIDAQABAoIBAQCESWG9HxKP7NuU
qew0y4YA3FgYcPXUG50hXmIkfwkjcwXnIu8jZz8WJEig6TCsesjZQW4viC2OCLP3
omAN6VFu9ZycWK5vLysTXVWITC+Hku8amEwJkLZkNZCjmhcHUdk/tzGy6TATw1Ca
f9iL+11F+03EsByKeaogjMXCmTeUSTE13746xHUk/bArnDCLKCx64G2Kodn1uRvd
zGW8CL9UQcW9blHy0UxL16D1KhJBCVXAVyP+v+DxGEuXtOrgsWxtaOtKdjcLzVcL
WWuE1sRzx6fQ3MSF7cZ/wC9e3NJ2pq2/FgnUYSNNnmnxLu3Tg4VVwyOmk1LG6/gE
JHnSyqtFAoGBAO4xanOv4/kOrEih941RC5yMvu9Yu9ixZXpgP+qWvu8c7FGrFnIR
Vf4ATCxQuZGkGDcUkKcJiWVX7jpTKH5pkMClZ5YJeRiIW9CxLlOsPXIpm9N8PskQ
6S1nGY4GcUSYcSdM7GIwmnRaVRebQhXTfgy3qB18UTkDHa4filC4Aq2TAoGBANeY
VK4UECHgnsaE7MhikfSl+2LZ/S44KX4wg97XUYyM81XvmJ2FgxR3oX3BU6b77mOB
Z9IIgRkSWUIS+if5+mxoUEHeex6csi9TvvSXTOviIAccJQ84o37iU494Kvcq9VIq
WMpwZGb4giYTXObc63fx6qlk1jVTIY6nEYXy1IbnAoGBANXcNHHuaMeDbxg/pB6T
t9M1Y3FOwEoM7Mn1hS3Bb2kNFPk2nY6JFiZaagoX6KVlKgC6TC5Nl7kQO+rOIzts
2PS/DcReeQWX2KgFjUy/BuRri2dU1KJ+tn13ZjBohGZMYLwiitKWRPdW67OoSKuE
GlacxyrCJcMEky91TiCvNmhVAoGAYqg8p+RadYY6YhHV4OTqcY+698NVTl847Zv5
3HGfybd+aubXac3869LKvadIRnOm5TYEcmKd4QE6gzf37W9BH3aks1/B64I9L9cc
3QSXmKHDkj1Y4BxFBP1Ay7hrwOuRk2X5d7ny2AQEWrQloSebQSoc/iM8uu4tvv/I
zwkOJCUCgYAWFRmo3JGqz9UVKnKhCvVnWIHiJk+UwzeCvhE7M4icJ8TltGoS+/tz
rrUS2ev/U4s4OaserNcQKsgJOARtiAkP+008PMaZiF1eDiLjag1YJ9JfwtFH8vl0
6bDnnWh+40eGGX1kyIUiNcAYAtoQGln1ZKy76svWAavFqtelagMqEQ==

        run: |

            # Save the SSH key to a file and set appropriate permissions
            echo "$SSH_KEY" > $GITHUB_WORKSPACE/quiz-be.pem
            chmod 600 $GITHUB_WORKSPACE/quiz-be.pem

            # Deploy the app to EC2 instance
            ssh -o StrictHostKeyChecking=no -i $GITHUB_WORKSPACE/quiz-be.pem ubuntu@ec2-16-171-16-255.eu-north-1.compute.amazonaws.com << EOF
          
              # Stop, remove, and clean up old containers/images
              docker stop \$(docker ps -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/voice-powered-quiz-be:v1.0) || true
              docker rm \$(docker ps -a -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/voice-powered-quiz-be:v1.0) || true
              docker rmi \$(docker images -q --filter reference=${{ secrets.DOCKER_USERNAME }}/voice-powered-quiz-be:v1.0) || true

              # Pull the latest image
              docker pull ${{ secrets.DOCKER_USERNAME }}/voice-powered-quiz-be:v1.0

              # Stop the running container and start a new one
              docker stop \$(docker ps -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/voice-powered-quiz-be:v1.0) || true
              docker run -d -p 8080:8080 \
                -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
                -e MONGO_URI=${{ secrets.MONGO_URI }} \
              ${{ secrets.DOCKER_USERNAME }}/voice-powered-quiz-be:v1.0
            EOF
